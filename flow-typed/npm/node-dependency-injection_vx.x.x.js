// flow-typed signature: 4708fda3a258bc4be65077f95bf41c0b
// flow-typed version: <<STUB>>/node-dependency-injection_v2.6.11/flow_v0.151.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'node-dependency-injection'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module "node-dependency-injection" {
  declare export type PassConfigHook =
    | "beforeOptimization"
    | "optimize"
    | "beforeRemoving"
    | "remove"
    | "afterRemoving";
  declare export type Parameter =
    | string
    | boolean
    | { [key: string]: any }
    | any[];
  declare export type Argument =
    | TagReference
    | Reference
    | PackageReference
    | any;
  declare export interface Extension {
    load: Function;
  }
  declare export interface Logger {
    warn(message?: any, ...optionalParams: any[]): void;
  }
  declare export interface CompilerPass {
    process(container: ContainerBuilder): void;
  }
  declare export interface Factory {
    Object: Object | Reference;
    method: string;
  }
  declare export interface Call {
    method: string;
    args: Argument[];
  }
  declare export interface Tag {
    name: string;
    attributes: Map<any, any>;
  }
  declare export class InstanceManager {
    constructor(
      containerBuilder: ContainerBuilder,
      definitions: Map<string, Definition>,
      alias: Map<string, string>
    ): this;
    getInstance(id: string, bypassPublic?: boolean): any;
    getInstanceFromDefinition(definition: Definition): any;
  }
  declare export class ContainerBuilder {
    +defaultDir: string;
    +containerReferenceAsService: boolean;
    +definitions: Map<string, Definition>;
    +instanceManager: InstanceManager;
    +extensions: Extension[];
    +services: Map<string, any>;
    frozen: boolean;
    logger: Logger;
    constructor(
      containerReferenceAsService?: boolean,
      defaultDir?: string | null
    ): this;
    addCompilerPass(
      compilerPass: any,
      type?: PassConfigHook,
      priority?: number
    ): void;
    compile(): void;
    findDefinition(key: string): Definition;
    findTaggedServiceIds(name: string): Map<any, any>;
    get<T>(id: string): T;
    getDefinition(key: string): Definition;
    getParameter<T: Parameter>(key: string): T;
    has(key: string): boolean;
    hasDefinition(key: string): boolean;
    hasParameter(key: string): boolean;
    isSet(id: string): boolean;
    register(id: string, object?: any, args?: Argument[]): Definition;
    registerExtension(extension: Extension): void;
    remove(id: string): void;
    removeDefinition(key: string): boolean;
    set(id: string, instance: any): void;
    setAlias(alias: string, id: string): void;
    setDefinition(id: string, definition: Definition): Definition;
    setParameter(key: string, value: Parameter): void;
  }
  declare export class Definition {
    Object: any;
    args: Argument[];
    appendArgs: Argument[];
    public: boolean;
    deprecated: string;
    lazy: boolean;
    decoratedService: string;
    decorationPriority: number;
    synthetic: boolean;
    shared: boolean;
    abstract: boolean;
    parent: string;
    +factory: Factory | null;
    +calls: Call[];
    +tags: Tag[];
    +properties: Map<string, any>;
    constructor(object?: any, args?: Argument[]): this;
    addArgument(argument: Argument): Definition;
    addMethodCall(method: string, args: any[]): Definition;
    addProperty(key: string, value: any): Definition;
    addTag(name: string, attributes?: Map<any, any>): Definition;
    isPublic(bypassPublic?: boolean): boolean;
    setFactory(Object: Reference | Object, method: string): void;
  }
  declare export class PackageReference {
    +id: string;
    constructor(id: string): this;
  }
  declare export class Reference {
    +id: string;
    +nullable: boolean;
    constructor(id: string, nullable?: boolean): this;
  }
  declare export class TagReference {
    +name: string;
    constructor(name: string): this;
  }
  declare export class PassConfig {
    static +TYPE_BEFORE_OPTIMIZATION: PassConfigHook;
    static +TYPE_OPTIMIZE: PassConfigHook;
    static +TYPE_BEFORE_REMOVING: PassConfigHook;
    static +TYPE_REMOVE: PassConfigHook;
    static +TYPE_AFTER_REMOVING: PassConfigHook;
    static isValidType(type: string): boolean;
  }
  declare export class FileLoader {
    constructor(container: ContainerBuilder): this;
    load(file: string | null): void;
  }
  declare export class YamlFileLoader mixins FileLoader {}
  declare export class JsFileLoader mixins FileLoader {}
  declare export class JsonFileLoader mixins JsFileLoader {}
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module "node-dependency-injection/bin/ndi-config:check" {
  declare module.exports: any;
}

declare module "node-dependency-injection/bin/ndi-config:create" {
  declare module.exports: any;
}

declare module "node-dependency-injection/bin/ndi-container:service" {
  declare module.exports: any;
}

declare module "node-dependency-injection/bin/ndi" {
  declare module.exports: any;
}

declare module "node-dependency-injection/bin/Services/File/BaseAdapter" {
  declare module.exports: any;
}

declare module "node-dependency-injection/bin/Services/File/FileManager" {
  declare module.exports: any;
}

declare module "node-dependency-injection/bin/Services/File/JsAdapter" {
  declare module.exports: any;
}

declare module "node-dependency-injection/bin/Services/File/JsonAdapter" {
  declare module.exports: any;
}

declare module "node-dependency-injection/bin/Services/File/YamlAdapter" {
  declare module.exports: any;
}

declare module "node-dependency-injection/coverage/lcov-report/block-navigation" {
  declare module.exports: any;
}

declare module "node-dependency-injection/coverage/lcov-report/prettify" {
  declare module.exports: any;
}

declare module "node-dependency-injection/coverage/lcov-report/sorter" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/bin/ndi-config:check" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/bin/ndi-config:create" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/bin/ndi-container:service" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/bin/ndi" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/bin/Services/File/BaseAdapter" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/bin/Services/File/FileManager" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/bin/Services/File/JsAdapter" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/bin/Services/File/JsonAdapter" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/bin/Services/File/YamlAdapter" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Compiler" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/CompilerPass/DecoratePass" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/CompilerPass" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/CompilerPass/OptimizePass" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/CompilerPass/RemovePass" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/ContainerBuilder" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Definition" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/AbstractServiceException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/AttributesMapException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/ConfigurationFileNotFoundException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/DefinitionNotFoundException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/FrozenContainerException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/LoadMethodNotFoundException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/LoggerWarnMethodNotFoundException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/MethodCallEmptyException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/MethodCallNotFoundException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/NotAbstractServiceException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/PrivateServiceException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/ProcessMethodNotFoundException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/ServiceCircularReferenceException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/ServiceFileNotFoundException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/ServiceFileNotLoadedException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/ServiceNotFoundException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/WrongCompilerPassTypeException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Exception/WrongDefinitionException" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/InstanceManager" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Loader/FileLoader" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Loader/JsFileLoader" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Loader/JsonFileLoader" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Loader/YamlFileLoader" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/PackageReference" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/PassConfig" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/Reference" {
  declare module.exports: any;
}

declare module "node-dependency-injection/dist/lib/TagReference" {
  declare module.exports: any;
}

// Filename aliases
declare module "node-dependency-injection/bin/ndi-config:check.js" {
  declare module.exports: $Exports<"node-dependency-injection/bin/ndi-config:check">;
}
declare module "node-dependency-injection/bin/ndi-config:create.js" {
  declare module.exports: $Exports<"node-dependency-injection/bin/ndi-config:create">;
}
declare module "node-dependency-injection/bin/ndi-container:service.js" {
  declare module.exports: $Exports<"node-dependency-injection/bin/ndi-container:service">;
}
declare module "node-dependency-injection/bin/ndi.js" {
  declare module.exports: $Exports<"node-dependency-injection/bin/ndi">;
}
declare module "node-dependency-injection/bin/Services/File/BaseAdapter.js" {
  declare module.exports: $Exports<"node-dependency-injection/bin/Services/File/BaseAdapter">;
}
declare module "node-dependency-injection/bin/Services/File/FileManager.js" {
  declare module.exports: $Exports<"node-dependency-injection/bin/Services/File/FileManager">;
}
declare module "node-dependency-injection/bin/Services/File/JsAdapter.js" {
  declare module.exports: $Exports<"node-dependency-injection/bin/Services/File/JsAdapter">;
}
declare module "node-dependency-injection/bin/Services/File/JsonAdapter.js" {
  declare module.exports: $Exports<"node-dependency-injection/bin/Services/File/JsonAdapter">;
}
declare module "node-dependency-injection/bin/Services/File/YamlAdapter.js" {
  declare module.exports: $Exports<"node-dependency-injection/bin/Services/File/YamlAdapter">;
}
declare module "node-dependency-injection/coverage/lcov-report/block-navigation.js" {
  declare module.exports: $Exports<"node-dependency-injection/coverage/lcov-report/block-navigation">;
}
declare module "node-dependency-injection/coverage/lcov-report/prettify.js" {
  declare module.exports: $Exports<"node-dependency-injection/coverage/lcov-report/prettify">;
}
declare module "node-dependency-injection/coverage/lcov-report/sorter.js" {
  declare module.exports: $Exports<"node-dependency-injection/coverage/lcov-report/sorter">;
}
declare module "node-dependency-injection/dist/bin/ndi-config:check.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/bin/ndi-config:check">;
}
declare module "node-dependency-injection/dist/bin/ndi-config:create.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/bin/ndi-config:create">;
}
declare module "node-dependency-injection/dist/bin/ndi-container:service.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/bin/ndi-container:service">;
}
declare module "node-dependency-injection/dist/bin/ndi.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/bin/ndi">;
}
declare module "node-dependency-injection/dist/bin/Services/File/BaseAdapter.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/bin/Services/File/BaseAdapter">;
}
declare module "node-dependency-injection/dist/bin/Services/File/FileManager.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/bin/Services/File/FileManager">;
}
declare module "node-dependency-injection/dist/bin/Services/File/JsAdapter.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/bin/Services/File/JsAdapter">;
}
declare module "node-dependency-injection/dist/bin/Services/File/JsonAdapter.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/bin/Services/File/JsonAdapter">;
}
declare module "node-dependency-injection/dist/bin/Services/File/YamlAdapter.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/bin/Services/File/YamlAdapter">;
}
declare module "node-dependency-injection/dist/lib/Compiler.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Compiler">;
}
declare module "node-dependency-injection/dist/lib/CompilerPass/DecoratePass.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/CompilerPass/DecoratePass">;
}
declare module "node-dependency-injection/dist/lib/CompilerPass/index" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/CompilerPass">;
}
declare module "node-dependency-injection/dist/lib/CompilerPass/index.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/CompilerPass">;
}
declare module "node-dependency-injection/dist/lib/CompilerPass/OptimizePass.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/CompilerPass/OptimizePass">;
}
declare module "node-dependency-injection/dist/lib/CompilerPass/RemovePass.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/CompilerPass/RemovePass">;
}
declare module "node-dependency-injection/dist/lib/ContainerBuilder.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/ContainerBuilder">;
}
declare module "node-dependency-injection/dist/lib/Definition.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Definition">;
}
declare module "node-dependency-injection/dist/lib/Exception/AbstractServiceException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/AbstractServiceException">;
}
declare module "node-dependency-injection/dist/lib/Exception/AttributesMapException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/AttributesMapException">;
}
declare module "node-dependency-injection/dist/lib/Exception/ConfigurationFileNotFoundException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/ConfigurationFileNotFoundException">;
}
declare module "node-dependency-injection/dist/lib/Exception/DefinitionNotFoundException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/DefinitionNotFoundException">;
}
declare module "node-dependency-injection/dist/lib/Exception/FrozenContainerException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/FrozenContainerException">;
}
declare module "node-dependency-injection/dist/lib/Exception/LoadMethodNotFoundException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/LoadMethodNotFoundException">;
}
declare module "node-dependency-injection/dist/lib/Exception/LoggerWarnMethodNotFoundException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/LoggerWarnMethodNotFoundException">;
}
declare module "node-dependency-injection/dist/lib/Exception/MethodCallEmptyException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/MethodCallEmptyException">;
}
declare module "node-dependency-injection/dist/lib/Exception/MethodCallNotFoundException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/MethodCallNotFoundException">;
}
declare module "node-dependency-injection/dist/lib/Exception/NotAbstractServiceException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/NotAbstractServiceException">;
}
declare module "node-dependency-injection/dist/lib/Exception/PrivateServiceException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/PrivateServiceException">;
}
declare module "node-dependency-injection/dist/lib/Exception/ProcessMethodNotFoundException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/ProcessMethodNotFoundException">;
}
declare module "node-dependency-injection/dist/lib/Exception/ServiceCircularReferenceException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/ServiceCircularReferenceException">;
}
declare module "node-dependency-injection/dist/lib/Exception/ServiceFileNotFoundException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/ServiceFileNotFoundException">;
}
declare module "node-dependency-injection/dist/lib/Exception/ServiceFileNotLoadedException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/ServiceFileNotLoadedException">;
}
declare module "node-dependency-injection/dist/lib/Exception/ServiceNotFoundException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/ServiceNotFoundException">;
}
declare module "node-dependency-injection/dist/lib/Exception/WrongCompilerPassTypeException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/WrongCompilerPassTypeException">;
}
declare module "node-dependency-injection/dist/lib/Exception/WrongDefinitionException.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Exception/WrongDefinitionException">;
}
declare module "node-dependency-injection/dist/lib/index" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib">;
}
declare module "node-dependency-injection/dist/lib/index.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib">;
}
declare module "node-dependency-injection/dist/lib/InstanceManager.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/InstanceManager">;
}
declare module "node-dependency-injection/dist/lib/Loader/FileLoader.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Loader/FileLoader">;
}
declare module "node-dependency-injection/dist/lib/Loader/JsFileLoader.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Loader/JsFileLoader">;
}
declare module "node-dependency-injection/dist/lib/Loader/JsonFileLoader.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Loader/JsonFileLoader">;
}
declare module "node-dependency-injection/dist/lib/Loader/YamlFileLoader.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Loader/YamlFileLoader">;
}
declare module "node-dependency-injection/dist/lib/PackageReference.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/PackageReference">;
}
declare module "node-dependency-injection/dist/lib/PassConfig.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/PassConfig">;
}
declare module "node-dependency-injection/dist/lib/Reference.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/Reference">;
}
declare module "node-dependency-injection/dist/lib/TagReference.js" {
  declare module.exports: $Exports<"node-dependency-injection/dist/lib/TagReference">;
}
